<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20232.23.0611.2007                               -->
<workbook original-version='18.1' source-build='2023.2.0 (20232.23.0611.2007)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
        <calculation class='tableau' formula='&quot;Communicable&quot;' />
        <members>
          <member value='&quot;Communicable&quot;' />
          <member value='&quot;Non Communicable&quot;' />
          <member value='&quot;Injuries&quot;' />
          <member value='&quot;total&quot;' />
        </members>
      </column>
      <column caption='age categoreies' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;infant&quot;'>
        <calculation class='tableau' formula='&quot;infant&quot;' />
        <members>
          <member value='&quot;infant&quot;' />
          <member value='&quot;middle age&quot;' />
          <member value='&quot;prime&quot;' />
          <member value='&quot;teenage&quot;' />
          <member value='&quot;old age&quot;' />
          <member value='&quot;other&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='WHO_Communicable+' inline='true' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='WHO_Communicable' name='textscan.067mncy0xxu1la1g7fjn51j7arkw'>
            <connection class='textscan' directory='D:/CODE/SUMMER/R_data_Analytics/Tableau' filename='WHO_Communicable.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Communicable.csv' table='[WHO_Communicable#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='Region Code' ordinal='0' />
            <column datatype='string' name='Region Name' ordinal='1' />
            <column datatype='string' name='Country Code' ordinal='2' />
            <column datatype='string' name='Country Name' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
            <column datatype='string' name='Sex' ordinal='5' />
            <column datatype='string' name='Age group code' ordinal='6' />
            <column datatype='string' name='Age Group' ordinal='7' />
            <column datatype='integer' name='Number' ordinal='8' />
            <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
            <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
            <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Communicable.csv' table='[WHO_Communicable#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Region Code' ordinal='0' />
              <column datatype='string' name='Region Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='string' name='Sex' ordinal='5' />
              <column datatype='string' name='Age group code' ordinal='6' />
              <column datatype='string' name='Age Group' ordinal='7' />
              <column datatype='integer' name='Number' ordinal='8' />
              <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
              <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
              <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Injuries.csv' table='[WHO_Injuries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Region Code' ordinal='0' />
              <column datatype='string' name='Region Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='string' name='Sex' ordinal='5' />
              <column datatype='string' name='Age group code' ordinal='6' />
              <column datatype='string' name='Age Group' ordinal='7' />
              <column datatype='integer' name='Number' ordinal='8' />
              <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
              <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
              <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
            </columns>
          </relation>
          <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Noncommunicable.csv' table='[WHO_Noncommunicable#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Region Code' ordinal='0' />
              <column datatype='string' name='Region Name' ordinal='1' />
              <column datatype='string' name='Country Code' ordinal='2' />
              <column datatype='string' name='Country Name' ordinal='3' />
              <column datatype='integer' name='Year' ordinal='4' />
              <column datatype='string' name='Sex' ordinal='5' />
              <column datatype='string' name='Age group code' ordinal='6' />
              <column datatype='string' name='Age Group' ordinal='7' />
              <column datatype='integer' name='Number' ordinal='8' />
              <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
              <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
              <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[Age Group (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Age Group]' />
          <map key='[Age Group (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Age Group]' />
          <map key='[Age Group]' value='[WHO_Communicable.csv].[Age Group]' />
          <map key='[Age group code (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Age group code]' />
          <map key='[Age group code (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Age group code]' />
          <map key='[Age group code]' value='[WHO_Communicable.csv].[Age group code]' />
          <map key='[Age-standardized death rate per 100 000 standard population (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Age-standardized death rate per 100 000 standard population]' />
          <map key='[Age-standardized death rate per 100 000 standard population (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Age-standardized death rate per 100 000 standard population]' />
          <map key='[Age-standardized death rate per 100 000 standard population]' value='[WHO_Communicable.csv].[Age-standardized death rate per 100 000 standard population]' />
          <map key='[Country Code (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Country Code]' />
          <map key='[Country Code (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Country Code]' />
          <map key='[Country Code]' value='[WHO_Communicable.csv].[Country Code]' />
          <map key='[Country Name (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Country Name]' />
          <map key='[Country Name (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Country Name]' />
          <map key='[Country Name]' value='[WHO_Communicable.csv].[Country Name]' />
          <map key='[Death rate per 100 000 population (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Death rate per 100 000 population]' />
          <map key='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Death rate per 100 000 population]' />
          <map key='[Death rate per 100 000 population]' value='[WHO_Communicable.csv].[Death rate per 100 000 population]' />
          <map key='[Number (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Number]' />
          <map key='[Number (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Number]' />
          <map key='[Number]' value='[WHO_Communicable.csv].[Number]' />
          <map key='[Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Percentage of cause-specific deaths out of total deaths]' />
          <map key='[Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Percentage of cause-specific deaths out of total deaths]' />
          <map key='[Percentage of cause-specific deaths out of total deaths]' value='[WHO_Communicable.csv].[Percentage of cause-specific deaths out of total deaths]' />
          <map key='[Region Code (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Region Code]' />
          <map key='[Region Code (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Region Code]' />
          <map key='[Region Code]' value='[WHO_Communicable.csv].[Region Code]' />
          <map key='[Region Name (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Region Name]' />
          <map key='[Region Name (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Region Name]' />
          <map key='[Region Name]' value='[WHO_Communicable.csv].[Region Name]' />
          <map key='[Sex (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Sex]' />
          <map key='[Sex (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Sex]' />
          <map key='[Sex]' value='[WHO_Communicable.csv].[Sex]' />
          <map key='[Year (WHO_Injuries.csv)]' value='[WHO_Injuries.csv].[Year]' />
          <map key='[Year (WHO_Noncommunicable.csv)]' value='[WHO_Noncommunicable.csv].[Year]' />
          <map key='[Year]' value='[WHO_Communicable.csv].[Year]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Code]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Region Code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Name]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Region Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age group code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age group code]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Age group code</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Group]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of cause-specific deaths out of total deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of cause-specific deaths out of total deaths]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Percentage of cause-specific deaths out of total deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age-standardized death rate per 100 000 standard population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age-standardized death rate per 100 000 standard population]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Age-standardized death rate per 100 000 standard population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate per 100 000 population]</local-name>
            <parent-name>[WHO_Communicable.csv]</parent-name>
            <remote-alias>Death rate per 100 000 population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Code (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Region Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Name (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Region Name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age group code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age group code (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Age group code</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Group (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of cause-specific deaths out of total deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Percentage of cause-specific deaths out of total deaths</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age-standardized death rate per 100 000 standard population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age-standardized death rate per 100 000 standard population (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Age-standardized death rate per 100 000 standard population</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate per 100 000 population (WHO_Injuries.csv)]</local-name>
            <parent-name>[WHO_Injuries.csv]</parent-name>
            <remote-alias>Death rate per 100 000 population</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Code (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Region Code</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region Name (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Region Name</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Code (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Country Code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country Name (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Country Name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sex</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sex (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Sex</remote-alias>
            <ordinal>29</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age group code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age group code (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Age group code</remote-alias>
            <ordinal>30</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age Group</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Age Group (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Age Group</remote-alias>
            <ordinal>31</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Number (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Number</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Percentage of cause-specific deaths out of total deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Percentage of cause-specific deaths out of total deaths</remote-alias>
            <ordinal>33</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age-standardized death rate per 100 000 standard population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Age-standardized death rate per 100 000 standard population (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Age-standardized death rate per 100 000 standard population</remote-alias>
            <ordinal>34</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death rate per 100 000 population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death rate per 100 000 population (WHO_Noncommunicable.csv)]</local-name>
            <parent-name>[WHO_Noncommunicable.csv]</parent-name>
            <remote-alias>Death rate per 100 000 population</remote-alias>
            <ordinal>35</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Age Group (WHO Injuries.csv)' datatype='string' name='[Age Group (WHO_Injuries.csv)]' role='dimension' type='nominal' />
      <column caption='Age Group (WHO Noncommunicable.csv)' datatype='string' name='[Age Group (WHO_Noncommunicable.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
      <column caption='Age group code (WHO Injuries.csv)' datatype='string' name='[Age group code (WHO_Injuries.csv)]' role='dimension' type='nominal' />
      <column caption='Age group code (WHO Noncommunicable.csv)' datatype='string' name='[Age group code (WHO_Noncommunicable.csv)]' role='dimension' type='nominal' />
      <column caption='Age-standardized death rate per 100 000 standard population (WHO Injuries.csv)' datatype='real' hidden='true' name='[Age-standardized death rate per 100 000 standard population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
      <column caption='Age-standardized death rate per 100 000 standard population (WHO Noncommunicable.csv)' datatype='real' hidden='true' name='[Age-standardized death rate per 100 000 standard population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
      <column datatype='real' hidden='true' name='[Age-standardized death rate per 100 000 standard population]' role='measure' type='quantitative' />
      <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
      </column>
      <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
      </column>
      <column caption='prime Age' datatype='real' name='[Calculation_1217942271556886534]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF LEFT([Age Group], 2) &gt;= &apos;20&apos; AND RIGHT([Age Group], 2) &lt;= &apos;50&apos; THEN [Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+[Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;END' />
      </column>
      <column caption='Country Code (WHO Injuries.csv)' datatype='string' name='[Country Code (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Code (WHO Noncommunicable.csv)' datatype='string' name='[Country Code (WHO_Noncommunicable.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Name (WHO Noncommunicable.csv)' datatype='string' name='[Country Name (WHO_Noncommunicable.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
      <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
      <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
      <column caption='Number (WHO Injuries.csv)' datatype='integer' name='[Number (WHO_Injuries.csv)]' role='dimension' type='ordinal' />
      <column caption='Number (WHO Noncommunicable.csv)' datatype='integer' name='[Number (WHO_Noncommunicable.csv)]' role='dimension' type='ordinal' />
      <column datatype='integer' hidden='true' name='[Number]' role='dimension' type='ordinal' />
      <column caption='Percentage of cause-specific deaths out of total deaths (WHO Injuries.csv)' datatype='real' name='[Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv)]' role='measure' type='quantitative' />
      <column caption='Percentage of cause-specific deaths out of total deaths (WHO Noncommunicable.csv)' datatype='real' name='[Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
      <column caption='Percentage of commucable-specific deaths out of total deaths' datatype='real' name='[Percentage of cause-specific deaths out of total deaths]' role='measure' type='quantitative' />
      <column caption='Region Code (WHO Injuries.csv)' datatype='string' name='[Region Code (WHO_Injuries.csv)]' role='dimension' type='nominal' />
      <column caption='Region Code (WHO Noncommunicable.csv)' datatype='string' name='[Region Code (WHO_Noncommunicable.csv)]' role='dimension' type='nominal' />
      <column caption='Region Name (WHO Injuries.csv)' datatype='string' name='[Region Name (WHO_Injuries.csv)]' role='dimension' type='nominal' />
      <column caption='Region Name (WHO Noncommunicable.csv)' datatype='string' name='[Region Name (WHO_Noncommunicable.csv)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Region Name]' role='dimension' type='nominal' />
      <column caption='Sex (WHO Injuries.csv)' datatype='string' name='[Sex (WHO_Injuries.csv)]' role='dimension' type='nominal' />
      <column caption='Sex (WHO Noncommunicable.csv)' datatype='string' name='[Sex (WHO_Noncommunicable.csv)]' role='dimension' type='nominal' />
      <column caption='Year (WHO Injuries.csv)' datatype='integer' name='[Year (WHO_Injuries.csv)]' role='dimension' type='quantitative' />
      <column caption='Year (WHO Noncommunicable.csv)' datatype='integer' name='[Year (WHO_Noncommunicable.csv)]' role='dimension' type='quantitative' />
      <column datatype='integer' name='[Year]' role='dimension' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='WHO_Communicable.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='WHO_Injuries.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='WHO_Noncommunicable.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]' role='measure' type='quantitative' />
      <column caption='age categories' datatype='string' name='[infant]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Age Group]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;infant&quot;'>
            <value>&quot;[0]&quot;</value>
            <value>&quot;[1-4]&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;middle age&quot;'>
            <value>&quot;[45-49]&quot;</value>
            <value>&quot;[50-54]&quot;</value>
            <value>&quot;[55-59]&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;old age&quot;'>
            <value>&quot;[60-64]&quot;</value>
            <value>&quot;[65-69]&quot;</value>
            <value>&quot;[70-74]&quot;</value>
            <value>&quot;[75-79]&quot;</value>
            <value>&quot;[80-84]&quot;</value>
            <value>&quot;[85+]&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;prime&quot;'>
            <value>&quot;[20-24]&quot;</value>
            <value>&quot;[25-29]&quot;</value>
            <value>&quot;[30-34]&quot;</value>
            <value>&quot;[35-39]&quot;</value>
            <value>&quot;[40-44]&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;teenage&quot;'>
            <value>&quot;[10-14]&quot;</value>
            <value>&quot;[15-19]&quot;</value>
            <value>&quot;[5-9]&quot;</value>
          </bin>
        </calculation>
      </column>
      <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' forecast-column-base='[sum:Calculation_1217942271533674496:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1217942271549964292]' derivation='User' forecast-column-base='[usr:Calculation_1217942271549964292:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death rate per 100 000 population (WHO_Injuries.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
      <column-instance column='[Death rate per 100 000 population]' derivation='Sum' name='[sum:Death rate per 100 000 population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Age Group)' hidden='true' name='[Action (Age Group)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age Group]' />
        </groupfilter>
      </group>
      <group caption='Action (Age Group,age categories)' hidden='true' name='[Action (Age Group,age categories)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Age Group]' />
          <groupfilter function='level-members' level='[infant]' />
        </groupfilter>
      </group>
      <group caption='Action (Country Name (WHO Injuries.csv))' hidden='true' name='[Action (Country Name (WHO Injuries.csv))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Country Name (WHO_Injuries.csv)]' />
        </groupfilter>
      </group>
      <group caption='Action (Region Name)' hidden='true' name='[Action (Region Name)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region Name]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.944149' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0558511' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:usr:Calculation_1217942271549964292:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:sum:Calculation_1217942271533674496:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Forecast Indicator:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Estimate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Actual&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
          <calculation class='tableau' formula='&quot;Communicable&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='WHO_Communicable.csv' id='WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E'>
            <properties context=''>
              <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Communicable.csv' table='[WHO_Communicable#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Region Code' ordinal='0' />
                  <column datatype='string' name='Region Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='string' name='Sex' ordinal='5' />
                  <column datatype='string' name='Age group code' ordinal='6' />
                  <column datatype='string' name='Age Group' ordinal='7' />
                  <column datatype='integer' name='Number' ordinal='8' />
                  <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
                  <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
                  <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='WHO_Injuries.csv' id='WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B'>
            <properties context=''>
              <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Injuries.csv' table='[WHO_Injuries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Region Code' ordinal='0' />
                  <column datatype='string' name='Region Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='string' name='Sex' ordinal='5' />
                  <column datatype='string' name='Age group code' ordinal='6' />
                  <column datatype='string' name='Age Group' ordinal='7' />
                  <column datatype='integer' name='Number' ordinal='8' />
                  <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
                  <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
                  <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='WHO_Noncommunicable.csv' id='WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955'>
            <properties context=''>
              <relation connection='textscan.067mncy0xxu1la1g7fjn51j7arkw' name='WHO_Noncommunicable.csv' table='[WHO_Noncommunicable#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Region Code' ordinal='0' />
                  <column datatype='string' name='Region Name' ordinal='1' />
                  <column datatype='string' name='Country Code' ordinal='2' />
                  <column datatype='string' name='Country Name' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                  <column datatype='string' name='Sex' ordinal='5' />
                  <column datatype='string' name='Age group code' ordinal='6' />
                  <column datatype='string' name='Age Group' ordinal='7' />
                  <column datatype='integer' name='Number' ordinal='8' />
                  <column datatype='real' name='Percentage of cause-specific deaths out of total deaths' ordinal='9' />
                  <column datatype='real' name='Age-standardized death rate per 100 000 standard population' ordinal='10' />
                  <column datatype='real' name='Death rate per 100 000 population' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Country Code]' />
                <expression op='[Country Code (WHO_Injuries.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Age Group]' />
                <expression op='[Age Group (WHO_Injuries.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country Name]' />
                <expression op='[Country Name (WHO_Injuries.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Region Name]' />
                <expression op='[Region Name (WHO_Injuries.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Year]' />
                <expression op='[Year (WHO_Injuries.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E' />
            <second-end-point object-id='WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B' />
          </relationship>
          <relationship>
            <expression op='AND'>
              <expression op='='>
                <expression op='[Age Group (WHO_Injuries.csv)]' />
                <expression op='[Age Group (WHO_Noncommunicable.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Age group code (WHO_Injuries.csv)]' />
                <expression op='[Age group code (WHO_Noncommunicable.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country Code (WHO_Injuries.csv)]' />
                <expression op='[Country Code (WHO_Noncommunicable.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Country Name (WHO_Injuries.csv)]' />
                <expression op='[Country Name (WHO_Noncommunicable.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Region Name (WHO_Injuries.csv)]' />
                <expression op='[Region Name (WHO_Noncommunicable.csv)]' />
              </expression>
              <expression op='='>
                <expression op='[Year (WHO_Injuries.csv)]' />
                <expression op='[Year (WHO_Noncommunicable.csv)]' />
              </expression>
            </expression>
            <first-end-point object-id='WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B' />
            <second-end-point object-id='WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='age wise death trend' name='[Action2_6F5BCBB5375E4E88B908BEE74870BF00]'>
      <activation type='on-select' />
      <source dashboard='data view' type='sheet' worksheet='Age wise Death' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Age wise Death,Country wise death,Region wise death rates' />
        <param name='special-fields' value='all' />
        <param name='target' value='data view' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2_AD3B350F55114D718BD7C42918F74219]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='data view' type='sheet' worksheet='Country wise death' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='data view' />
      </command>
    </action>
    <action caption='region in maps' name='[Action3_30B19EACC31B4D96834241DFA2B18283]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='data view' type='sheet' worksheet='Region wise death rates' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Age wise Death,Region wise death rates,yearly death trend ' />
        <param name='special-fields' value='all' />
        <param name='target' value='data view' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Age wise Death'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='age categories' datatype='string' name='[infant]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age Group]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;infant&quot;'>
                  <value>&quot;[0]&quot;</value>
                  <value>&quot;[1-4]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;middle age&quot;'>
                  <value>&quot;[45-49]&quot;</value>
                  <value>&quot;[50-54]&quot;</value>
                  <value>&quot;[55-59]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;old age&quot;'>
                  <value>&quot;[60-64]&quot;</value>
                  <value>&quot;[65-69]&quot;</value>
                  <value>&quot;[70-74]&quot;</value>
                  <value>&quot;[75-79]&quot;</value>
                  <value>&quot;[80-84]&quot;</value>
                  <value>&quot;[85+]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;prime&quot;'>
                  <value>&quot;[20-24]&quot;</value>
                  <value>&quot;[25-29]&quot;</value>
                  <value>&quot;[30-34]&quot;</value>
                  <value>&quot;[35-39]&quot;</value>
                  <value>&quot;[40-44]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;teenage&quot;'>
                  <value>&quot;[10-14]&quot;</value>
                  <value>&quot;[15-19]&quot;</value>
                  <value>&quot;[5-9]&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]'>
            <groupfilter function='level-members' level='[Country Name (WHO_Injuries.csv)]' user:ui-action-filter='[Action2_AD3B350F55114D718BD7C42918F74219]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant] / [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk])</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</cols>
      </table>
      <simple-id uuid='{132E2794-7775-451B-9DB2-E37FD134DA23}' />
    </worksheet>
    <worksheet name='Age wise Death (story)'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='age categories' datatype='string' name='[infant]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age Group]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;infant&quot;'>
                  <value>&quot;[0]&quot;</value>
                  <value>&quot;[1-4]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;middle age&quot;'>
                  <value>&quot;[45-49]&quot;</value>
                  <value>&quot;[50-54]&quot;</value>
                  <value>&quot;[55-59]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;old age&quot;'>
                  <value>&quot;[60-64]&quot;</value>
                  <value>&quot;[65-69]&quot;</value>
                  <value>&quot;[70-74]&quot;</value>
                  <value>&quot;[75-79]&quot;</value>
                  <value>&quot;[80-84]&quot;</value>
                  <value>&quot;[85+]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;prime&quot;'>
                  <value>&quot;[20-24]&quot;</value>
                  <value>&quot;[25-29]&quot;</value>
                  <value>&quot;[30-34]&quot;</value>
                  <value>&quot;[35-39]&quot;</value>
                  <value>&quot;[40-44]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;teenage&quot;'>
                  <value>&quot;[10-14]&quot;</value>
                  <value>&quot;[15-19]&quot;</value>
                  <value>&quot;[5-9]&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Age Group]' derivation='None' name='[none:Age Group:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk] / [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant])</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</cols>
      </table>
      <simple-id uuid='{C6C8A249-F935-4CC0-8A9C-C837C182C424}' />
    </worksheet>
    <worksheet name='Country wise death'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region Name]' role='dimension' type='nominal' />
            <column-instance column='[Country Name (WHO_Injuries.csv)]' derivation='None' name='[none:Country Name (WHO_Injuries.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Region Name)]'>
            <groupfilter function='level-members' level='[Region Name]' user:ui-action-filter='[Action3_30B19EACC31B4D96834241DFA2B18283]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Region Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Longitude (generated)]' field-type='quantitative' max='-8973899.774826033' min='-20653906.601814616' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Latitude (generated)]' field-type='quantitative' max='3973813.6561339339' min='-1981301.4712956203' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]' />
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' />
              <geometry column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Latitude (generated)]</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A86F6901-514E-4E2F-A349-4F9A14881899}' />
    </worksheet>
    <worksheet name='Country wise death (story)'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region Name]' role='dimension' type='nominal' />
            <column-instance column='[Country Name (WHO_Injuries.csv)]' derivation='None' name='[none:Country Name (WHO_Injuries.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region Name]' derivation='None' name='[none:Region Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]'>
            <groupfilter function='member' level='[none:Region Name:nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]' />
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' />
              <geometry column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Latitude (generated)]</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{843590D4-81EB-483C-B335-A142E4A7139D}' />
    </worksheet>
    <worksheet name='Region wise death rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
          </datasources>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region Name]' role='dimension' type='nominal' />
            <column-instance column='[Region Name]' derivation='None' name='[none:Region Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death rate per 100 000 population (WHO_Injuries.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population]' derivation='Sum' name='[sum:Death rate per 100 000 population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]'>
            <groupfilter function='level-members' level='[Country Name (WHO_Injuries.csv)]' user:ui-action-filter='[Action2_AD3B350F55114D718BD7C42918F74219]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region Name:nk]' />
              <groupfilter function='member' level='[none:Region Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Central and South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America and the Caribbean&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</column>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]' value='43' />
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' value='43' />
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' value='43' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]' value='50' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a7acad' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</rows>
        <cols>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk] + ([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk] + [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]))</cols>
      </table>
      <simple-id uuid='{710E8F5F-F08E-4CAA-A3A2-1FFD70D065D7}' />
    </worksheet>
    <worksheet name='Region wise total death rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
            </column>
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region Name]' role='dimension' type='nominal' />
            <column-instance column='[Region Name]' derivation='None' name='[none:Region Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Region Name:nk]' />
              <groupfilter function='member' level='[none:Region Name:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Europe&quot;</bucket>
              <bucket>&quot;Central and South America&quot;</bucket>
              <bucket>&quot;Asia&quot;</bucket>
              <bucket>&quot;North America and the Caribbean&quot;</bucket>
              <bucket>&quot;Oceania&quot;</bucket>
              <bucket>&quot;Africa&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]' value='50' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' palette='orange_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' />
              <text column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' />
              <lod column='[Parameters].[Parameter 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]</cols>
      </table>
      <simple-id uuid='{BA332167-11F2-4262-8055-FF646A0EFBDF}' />
    </worksheet>
    <worksheet name='highest Country wise death (prime age)'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='age categories' datatype='string' name='[infant]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age Group]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;infant&quot;'>
                  <value>&quot;[0]&quot;</value>
                  <value>&quot;[1-4]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;middle age&quot;'>
                  <value>&quot;[45-49]&quot;</value>
                  <value>&quot;[50-54]&quot;</value>
                  <value>&quot;[55-59]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;old age&quot;'>
                  <value>&quot;[60-64]&quot;</value>
                  <value>&quot;[65-69]&quot;</value>
                  <value>&quot;[70-74]&quot;</value>
                  <value>&quot;[75-79]&quot;</value>
                  <value>&quot;[80-84]&quot;</value>
                  <value>&quot;[85+]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;prime&quot;'>
                  <value>&quot;[20-24]&quot;</value>
                  <value>&quot;[25-29]&quot;</value>
                  <value>&quot;[30-34]&quot;</value>
                  <value>&quot;[35-39]&quot;</value>
                  <value>&quot;[40-44]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;teenage&quot;'>
                  <value>&quot;[10-14]&quot;</value>
                  <value>&quot;[15-19]&quot;</value>
                  <value>&quot;[5-9]&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]'>
            <groupfilter function='level-members' level='[none:Country Name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]' value='32' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]' value='112' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant] / [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk])</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</cols>
      </table>
      <simple-id uuid='{F4128F76-EB4E-49B3-9905-FFCC2AE0F10A}' />
    </worksheet>
    <worksheet name='highest Country wise death(story)'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
            </column>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='Region Name (WHO Injuries.csv)' datatype='string' name='[Region Name (WHO_Injuries.csv)]' role='dimension' type='nominal' />
            <column-instance column='[Country Name (WHO_Injuries.csv)]' derivation='None' name='[none:Country Name (WHO_Injuries.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Region Name (WHO_Injuries.csv)]' derivation='None' name='[none:Region Name (WHO_Injuries.csv):nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name (WHO_Injuries.csv):nk]'>
            <groupfilter function='member' level='[none:Region Name (WHO_Injuries.csv):nk]' member='&quot;Europe&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name (WHO_Injuries.csv):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]</cols>
      </table>
      <simple-id uuid='{CE9051C6-A429-46DA-AC09-19016B2EC9B8}' />
    </worksheet>
    <worksheet name='stat'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
            </column>
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='Percentage of cause-specific deaths out of total deaths (WHO Injuries.csv)' datatype='real' name='[Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Percentage of cause-specific deaths out of total deaths (WHO Noncommunicable.csv)' datatype='real' name='[Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='WHO_Communicable.csv' datatype='integer' name='[__tableau_internal_object_id__].[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]' role='measure' type='quantitative' />
            <column caption='Percentage of commucable-specific deaths out of total deaths' datatype='real' name='[Percentage of cause-specific deaths out of total deaths]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='WHO_Injuries.csv' datatype='integer' name='[__tableau_internal_object_id__].[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='WHO_Communicable.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='WHO_Noncommunicable.csv' datatype='integer' name='[__tableau_internal_object_id__].[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='WHO_Injuries.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='WHO_Noncommunicable.csv' datatype='table' name='[__tableau_internal_object_id__].[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:WHO_Communicable.csv_36138690C13E4AC2A366967F706DED7E:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:WHO_Injuries.csv_026B7A5E382A4D069AA38F2F73BF227B:qk]' pivot='key' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:WHO_Noncommunicable.csv_CD674F7E9A2443179A8700F556081955:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population (WHO_Injuries.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population]' derivation='Sum' name='[sum:Death rate per 100 000 population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv)]' derivation='Sum' name='[sum:Percentage of cause-specific deaths out of total deaths (WHO_Injuries.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv)]' derivation='Sum' name='[sum:Percentage of cause-specific deaths out of total deaths (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Percentage of cause-specific deaths out of total deaths]' derivation='Sum' name='[sum:Percentage of cause-specific deaths out of total deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Multiple Values]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{AD70A157-1C86-4312-AA0E-480D0ADC268F}' />
    </worksheet>
    <worksheet name='top 5 prime death rates'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
          </datasources>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death rate per 100 000 population (WHO_Injuries.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' derivation='Sum' name='[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Death rate per 100 000 population]' derivation='Sum' name='[sum:Death rate per 100 000 population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Noncommunicable.csv):qk]&quot;</bucket>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population:qk]&quot;</bucket>
              <bucket>&quot;[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Death rate per 100 000 population (WHO_Injuries.csv):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Chile&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Guatemala&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;South Africa&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</column>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Multiple Values]</rows>
        <cols>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk] / [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{AF4AD4AF-7EF4-4D18-8833-180475A888C9}' />
    </worksheet>
    <worksheet name='yearly death trend '>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column datatype='string' name='[Age Group]' role='dimension' type='nominal' />
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
            </column>
            <column caption='Country Name (WHO Injuries.csv)' datatype='string' name='[Country Name (WHO_Injuries.csv)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='Year (WHO Noncommunicable.csv)' datatype='integer' name='[Year (WHO_Noncommunicable.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' forecast-column-base='[sum:Calculation_1217942271533674496:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' forecast-column-base='[usr:Calculation_1217942271549964292:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
            <column caption='age categories' datatype='string' name='[infant]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Age Group]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;infant&quot;'>
                  <value>&quot;[0]&quot;</value>
                  <value>&quot;[1-4]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;middle age&quot;'>
                  <value>&quot;[45-49]&quot;</value>
                  <value>&quot;[50-54]&quot;</value>
                  <value>&quot;[55-59]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;old age&quot;'>
                  <value>&quot;[60-64]&quot;</value>
                  <value>&quot;[65-69]&quot;</value>
                  <value>&quot;[70-74]&quot;</value>
                  <value>&quot;[75-79]&quot;</value>
                  <value>&quot;[80-84]&quot;</value>
                  <value>&quot;[85+]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;prime&quot;'>
                  <value>&quot;[20-24]&quot;</value>
                  <value>&quot;[25-29]&quot;</value>
                  <value>&quot;[30-34]&quot;</value>
                  <value>&quot;[35-39]&quot;</value>
                  <value>&quot;[40-44]&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;teenage&quot;'>
                  <value>&quot;[10-14]&quot;</value>
                  <value>&quot;[15-19]&quot;</value>
                  <value>&quot;[5-9]&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (WHO_Noncommunicable.csv)]' derivation='None' name='[none:Year (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Age Group,age categories)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_6F5BCBB5375E4E88B908BEE74870BF00]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[Age Group]' member='&quot;[80-84]&quot;' />
              <groupfilter function='member' level='[infant]' member='&quot;old age&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]'>
            <groupfilter function='level-members' level='[Country Name (WHO_Injuries.csv)]' user:ui-action-filter='[Action2_AD3B350F55114D718BD7C42918F74219]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Country Name (WHO Injuries.csv))]</column>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[Action (Age Group,age categories)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:sum:Calculation_1217942271533674496:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:usr:Calculation_1217942271549964292:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:sum:Calculation_1217942271533674496:qk] + [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:usr:Calculation_1217942271549964292:qk])</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year (WHO_Noncommunicable.csv):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{2DC61B04-F518-47B8-8FD3-FE5A788E8700}' />
    </worksheet>
    <worksheet name='yearly death trend(story)'>
      <table>
        <view>
          <datasources>
            <datasource caption='WHO_Communicable+' name='federated.0lm18u70ttbx3q1dttrlk1mrmcmx' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
              <calculation class='tableau' formula='&quot;Communicable&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0lm18u70ttbx3q1dttrlk1mrmcmx'>
            <column caption='Death causes' datatype='real' name='[Calculation_1217942271533674496]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;when &quot;Communicable&quot; THEN [Death rate per 100 000 population]&#13;&#10;when &quot;Non Communicable&quot; then [Death rate per 100 000 population (WHO_Noncommunicable.csv)]&#13;&#10;WHEN &quot;Injuries&quot; THEN [Death rate per 100 000 population (WHO_Injuries.csv)]&#13;&#10;WHEN &quot;total&quot; THEN ([Death rate per 100 000 population]+[Death rate per 100 000 population (WHO_Injuries.csv)]+ [Death rate per 100 000 population (WHO_Noncommunicable.csv)])/3&#13;&#10;END' />
            </column>
            <column caption='total death rates' datatype='real' name='[Calculation_1217942271549964292]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='(SUM([Death rate per 100 000 population])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Injuries.csv)])+&#13;&#10;SUM([Death rate per 100 000 population (WHO_Noncommunicable.csv)]))/3' />
            </column>
            <column datatype='string' name='[Country Name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Death rate Injuries' datatype='real' name='[Death rate per 100 000 population (WHO_Injuries.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate NonCommunicable' datatype='real' name='[Death rate per 100 000 population (WHO_Noncommunicable.csv)]' role='measure' type='quantitative' />
            <column caption='Death rate Communicable' datatype='real' name='[Death rate per 100 000 population]' role='measure' type='quantitative' />
            <column caption='Year (WHO Noncommunicable.csv)' datatype='integer' name='[Year (WHO_Noncommunicable.csv)]' role='dimension' type='quantitative' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' forecast-column-base='[sum:Calculation_1217942271533674496:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' forecast-column-base='[usr:Calculation_1217942271549964292:qk]' forecast-column-type='forecast-value' name='[fVal:usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country Name]' derivation='None' name='[none:Country Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Year (WHO_Noncommunicable.csv)]' derivation='None' name='[none:Year (WHO_Noncommunicable.csv):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271533674496]' derivation='Sum' name='[sum:Calculation_1217942271533674496:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1217942271549964292]' derivation='User' name='[usr:Calculation_1217942271549964292:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]'>
            <groupfilter function='member' level='[none:Country Name:nk]' member='&quot;Hungary&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:sum:Calculation_1217942271533674496:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:usr:Calculation_1217942271549964292:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' />
            </encodings>
            <trendline degree='3' enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='polynomial' />
          </pane>
        </panes>
        <rows>([federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:sum:Calculation_1217942271533674496:qk] + [federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[fVal:usr:Calculation_1217942271549964292:qk])</rows>
        <cols>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year (WHO_Noncommunicable.csv):qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{5609E20F-40EE-4F54-9D51-266718BB8B88}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='data view'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Death causes' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Communicable&quot;'>
          <calculation class='tableau' formula='&quot;Communicable&quot;' />
          <members>
            <member value='&quot;Communicable&quot;' />
            <member value='&quot;Non Communicable&quot;' />
            <member value='&quot;Injuries&quot;' />
            <member value='&quot;total&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='19' param='horz' type-v2='layout-flow' w='98980' x='510' y='893'>
            <zone h='98214' id='8' param='horz' type-v2='layout-flow' w='88776' x='510' y='893'>
              <zone h='98214' id='6' type-v2='layout-basic' w='88776' x='510' y='893'>
                <zone h='45309' id='3' name='Region wise death rates' w='39691' x='510' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49107' id='5' name='Country wise death' w='49085' x='40201' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='52905' id='11' name='Age wise Death' w='39691' x='510' y='46202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49107' id='12' name='yearly death trend ' w='49085' x='40201' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
            <zone fixed-size='160' h='98214' id='18' is-fixed='true' param='vert' type-v2='layout-flow' w='10204' x='89286' y='893'>
              <zone h='5804' id='21' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10204' x='89286' y='893'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='23' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98214' id='22' param='vert' type-v2='layout-flow' w='98980' x='510' y='893'>
                <zone fixed-size='280' h='45309' id='3' is-fixed='true' name='Region wise death rates' w='39691' x='510' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='5' is-fixed='true' name='Country wise death' w='49085' x='40201' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5804' id='21' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='10204' x='89286' y='893'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52905' id='11' is-fixed='true' name='Age wise Death' w='39691' x='510' y='46202'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49107' id='12' is-fixed='true' name='yearly death trend ' w='49085' x='40201' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9B701667-1E33-4EB8-80D0-52D0D6EFAF12}' />
    </dashboard>
    <dashboard name='hungary' type='storyboard'>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='151' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98214' id='1' param='vert' removable='false' type-v2='layout-flow' w='98980' x='510' y='893'>
            <zone h='3683' id='3' type-v2='title' w='98980' x='510' y='893' />
            <zone h='11272' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98980' x='510' y='4576' />
            <zone h='83259' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98980' x='510' y='15848'>
              <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='world mortality' captured-sheet='Region wise death rates' id='1' />
                  <story-point caption='total death rates' captured-sheet='Region wise total death rates' id='2' />
                  <story-point caption='death toll in europe' captured-sheet='Country wise death (story)' id='3' />
                  <story-point caption='decreasing order' captured-sheet='highest Country wise death(story)' id='5' />
                  <story-point caption='death trend in hungary' captured-sheet='yearly death trend(story)' id='8'>
                    <capturedDeltas>
                      <datasource name='Parameters'>
                        <column name='[Parameter 1]' value='&quot;total&quot;' />
                      </datasource>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='age wise death' captured-sheet='Age wise Death (story)' id='4' />
                  <story-point caption='death rate vs age cat' captured-sheet='highest Country wise death (prime age)' id='9' />
                  <story-point caption='top 5 mortality' captured-sheet='top 5 prime death rates' id='7' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{D28D9CF5-3BEA-47E5-A9A8-690981FDC23D}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='stat'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AB6C3CE8-9856-44A8-B53D-24B0524D5533}' />
    </window>
    <window class='worksheet' name='Region wise death rates'>
      <cards>
        <edge name='left'>
          <strip size='216'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Code:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5A73D821-8A8D-449F-BBB7-954F83F89F41}' />
    </window>
    <window class='worksheet' name='Region wise total death rates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Code:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6CC9FDE1-D21C-49D7-863C-DA90AD0A1E40}' />
    </window>
    <window class='worksheet' name='Country wise death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3A73DA55-67FA-4C24-B280-A50DB196F1D9}' />
    </window>
    <window class='worksheet' name='Country wise death (story)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F784609-E358-492B-959D-716E84080AB9}' />
    </window>
    <window class='worksheet' name='highest Country wise death(story)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[usr:Calculation_1217942271549964292:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B014748-D571-4639-A25E-5D80CF1891B2}' />
    </window>
    <window class='worksheet' name='Age wise Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='4' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group (WHO_Noncommunicable.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age group code (WHO_Noncommunicable.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CFA38F86-2D74-41D7-8835-5414524BB643}' />
    </window>
    <window class='worksheet' name='Age wise Death (story)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='4' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group (WHO_Noncommunicable.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age group code (WHO_Noncommunicable.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BDAFA323-E9E3-4EE9-96D7-AD9E21B7F8F5}' />
    </window>
    <window class='worksheet' name='yearly death trend(story)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year (WHO_Noncommunicable.csv):qk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5E25BAE5-78D1-4836-BADD-51622A6196E1}' />
    </window>
    <window class='worksheet' name='yearly death trend '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year (WHO_Noncommunicable.csv):qk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EA00A245-22B1-4A3A-BFFA-986629D06C97}' />
    </window>
    <window class='worksheet' name='highest Country wise death (prime age)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[Parameters].[Parameter 1]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Calculation_1217942271556886534:ok]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name (WHO_Noncommunicable.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name (WHO_Injuries.csv):nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Region Name:nk]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6834A990-C522-4EB1-8338-2FADE4959C22}' />
    </window>
    <window class='dashboard' name='data view'>
      <viewpoints>
        <viewpoint name='Age wise Death'>
          <zoom type='fit-height' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant]</field>
                      <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[infant]</field>
                    <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Age Group:nk]</field>
                    <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[sum:Calculation_1217942271533674496:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;old age&quot;</value>
                  <value>&quot;[80-84]&quot;</value>
                  <value>91641759.58931683</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Country wise death'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='2' />
        </viewpoint>
        <viewpoint name='Region wise death rates' />
        <viewpoint name='yearly death trend '>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{84E06358-0640-4148-9670-03B279AB5379}' />
    </window>
    <window class='dashboard' maximized='true' name='hungary'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{E960F372-A590-4C55-8348-EDEC89E5743B}' />
    </window>
    <window class='worksheet' name='top 5 prime death rates'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[:Measure Names]</field>
            <field>[federated.0lm18u70ttbx3q1dttrlk1mrmcmx].[none:Country Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{408F7B36-2DE6-4199-B22D-FC98533370C9}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Age wise Death' width='192'>
      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
      AJMLzf8H1Htl3mOD0KUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Age wise Death (story)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise death' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country wise death (story)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Region wise death rates' width='192'>
      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
      C7bw/wFPts1Nk1RInQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Region wise total death rates' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='data view' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='highest Country wise death (prime age)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='highest Country wise death(story)' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d2XMcSX7fP3V2VXVV342bJEByDs2sfEgbsvxgyQo/KMIO+ZCvCK9tPfnB
      /nMcipCtJ2/YXoWPkCIs6/I6JFtaySvZO5o9ZngMD5AEQACNvo+qrq7K8gM4u+QMSRDVaBSK
      yM/DPGD47fxlAr/O+lZm/lJJkiRBIrmkqFkHIJFkiUwAyaVGJoDkUiMTQHKpkQkgudTkIgGS
      JCHty6p5XnLlTTvvOF3GMdZTf8I5kiQJ7T/9HsksOrVWxAJVS5fnedMmIkFRFFBStCkEqpqf
      vp6VVjnvdYAw9BFCJ/AnVKrlN9IIIfidD/42Yau74Ogkl41znwFm0zH37u1BArPZCv1el0kY
      USkV6Y+nKH4HYVQxLY2K56LpFvXamyWKRHJazt0DaEaBm+++R6NW4unuLopucXVjhXAWEQQB
      pl3CMlTWr1xh2G1je+55hyi5RJz7I9Cr6HdahJg0n/u27/V6VCoVhBDc/zf/mdgPTv25iRAo
      KZ9t86Y99gBw/J8UbSpqKv+Qt3F6XnthEuB1CCGYfOd7kMIExyJGU7VU7eZNKxKBoigoKf6K
      42cmOMXff+7G6XltZglw+PQJ08SgXinjODb+qI9S8LCM5zNaMBz6FIs2t3/m7xF3pAmWnC2Z
      vQYdjUaYbo3e4QH3+10KTpGC2eOz7T2ur9UQqk4UBhScOsWinVWYkreczBbCKvVlNlYbKKrK
      lWtXsSyLWCQs1SqU6k1qpSIJCgXLzCpEySUgNx6g/R/+K4k/TaVNvcCTM23yzAOkcbJ56+tZ
      aXOxEgxgv/9OupVgEaOmNEp502aXAPkap+e1mc0AcRgyTRKcQgHgRBN852d/UZpgyZmT2QwQ
      hyHtfoudScLu9l1qK+tUSqXnTLDGLJxiSRMsWSCZJYCqaRRMi3q1QhT6lMslwkiwVK9SqjdR
      45DDo1CaYMlCyY0J7vzHXycJTr8SLESCqqZZ3smfViQJCkqaheDc9fWstLkxwda716UJPoH5
      THD8zASn1eZnnJ7XvjADDLo9nEoZfzTC8zwmkwmaplF4ZlQBBoMhRUtlOImIooRqo8ILISQR
      g3FIyXVe2rA/7DIIVQoEHPV9trY20b4w5tPp9IU2hRDc/evSBEvOnhdmgHG/T6Hs0Xr0kPsi
      wasvMTncwykWufvwKT/23lUGk4j3r1X5+JM9Pri+ws6jB4yDGFsThEIjmY2JhE6iQsEsMBmP
      cNwyG02Pe48PIAyob91kOppSUAWPt+8jZiF3t/e4cWWJzjhGESE/8ZNfxUh52EEieVNeSIBK
      zeOzW7eoek2uVwu0RhFLS038MOL69U1AYFs2qmbx/o11huMJpWoFz0s42t8jiBUsTcW2C/hh
      iO2WaNRrwPEGRVVVaKxuUK+V6QQD2r0p9aVlbGXGTCmgKzHVio6WzICEyWgIegHLzM2TmiRn
      nJkJPjp8SsGt4jnWWXzcCwgh6Pzab5AEp18Jznq77Xlqk0Qc7wRNux06R309K21u3gKFH3+c
      ajt01kvt56mdZzt03vp6VtrMEmA2ndDqjVlbbv7wZ1EYgG6hqzCZTHAc54fBHvzDf0zS62UR
      quQtJrOH63arRd+PUUSMguDxw4eUykXMYo2xP6VWcvn04z+ldvUrbK7VswpT8paTWQKEUYQa
      zxiNYuJEoVb10J0yqqqwvnGFaNLFLTcxlAv/hCbJMbnxAJP/9pswlduhT9IpivJsMSyFNuWR
      yLyN0/Pa3LxfNK5dgUia4NchzwOcXnvOM4Dg/p072NUl1pZOfq4fDAeUvNLxa9Bf+hpJX5pg
      ydlyzjNAglOqE/p9/vgPPsJb3kAEIaWSS284xHJc4tEhilVF0Q2iSZ9rN3+MUvHs1xYkEjj3
      BFAYdA6xylWaK+sUqxWKpsPE97laq6EqCe0kRNN16msbBP0Cs9kMkAkgWQy5McHB7/4WTMNU
      2rw+n56WeVaC89bXs9LmxgTra2vSBJ+oS1CzqA6dY+25zwBxGHD3/j2aq5s0Ki6jXgezVMP8
      Qj++uBLc+xf/FPr98wxVcgk49xkgns3wg4Du0QHxZEyv38bsD+kPJ5jRgFh3QTOpllw++fNv
      U7/243IlWLIwzn3DvarpFEyTgmlwsP8U0y4iohkT36fglCjaJusbVzAN8KrLmHIlWLJALoQJ
      Hg97BLFKvVJ66f8XQjD95u9AeHoTnPV22/PUJs9WguV26DfXXggTXPQqFE/4N9ryCkoKExwL
      gZZykPKmnbc6dJ76elbaCzEDAAwGA0zTxLKO3/l3Ox2qtePTZEIIBv/yn8NAmmDJ2XIhZgCA
      8WTI/Tu71Bs17jxq8e7mMtPARzUdGvKKJMmCuDCnzgsFm6XlJlGistKsYTkug16HoudlHZrk
      LebCPAK9jOFwiOd5x0cif//3pAk+STfHbtC89fWstBfmEehleM99+6v1ZkoTnN/re06LvCLp
      9NqFzgBPHm1TrZbQ7Bq2AUEQEIYhpdKLrzs73Q61au2Fnw0Ggx/+O2mCJYtisTOAiNh+cJ9I
      2aE79HFNKJVLPN7dx2/vYnjLmJaObenc/vg7VNY3CSY+1ZJHezDCjCesbH1Ao3LSS1KJJB0L
      TQC3UieOpsS6S7nWQJlNsLwKBV2jo8XYxSperYzfb1NdXsEwTFY2lxh1Ozi2Q9mymYZTOHGV
      QCJJx4U2wZ8jhCD8g/+BksIEZ73b8Dy1Ijm+JzhtXSB5JvgCo9bqqbZDK7FASVljNG9adY6t
      EMocf0x5G6fntQudAaLphHsPnnD1+nWcggHAZDJCVU2sL1x8MRn2UKwS9gtXJMUM+j6u5zD4
      V78kTbDkzFnoDJAkglgIjg4PCCYj7FIVgi57rSnNis40VnjwaJebW1cwNAVF6/LZ9lOur1dJ
      FJ3ZbIpdbOB6Ly+1LpHMy0ITQEFB0xRs2yCOHUQscNwK9dmIIJxQKlfY2tqiVq9iG9Duj1lb
      qlNtLqGKGYetNpZdOLkhiSQl+THB/+t/osykCT5JN09hrOPrhi7XeeLcmGCtXktlgpnjGp28
      aZU5tkIwRwLkbZye12aSAJNBlycHba5fv4HxhfuRjm+pKX8psODrvwJDaYIlZ0s2M0CSEMeC
      g/2njAYDvGKBTz75hPWt95iORqhaSKhY2CRUV66ytlTJJEzJ2082CaAoKCToiaDo2ihmkY1r
      1/Eck6FwcJwShmXjFNxMwpNcHnJjgqM/+YNU26FFIlCVlEYpZ9okSVIZ4HnazLs2NyZY8coo
      8ez0wjneFORNK0Ty7C3Q+bWZd20mCfBk+z7TxODm1lVEOKE/harnMPUn6JbzpXuDAcJv/FsY
      Ds4/WMlbTTZvgSYTQsXkz771+1ilBpbj8ODekKpXQ3d0dGDQPcIPI5ZWt1iVJliyIDJJAMuy
      SIRGcXkNxy0xC6fsDYc0qssQTen5MatrV1EQJPl5SpPkkAthguMopNMb0qjXX/r8KoQg+vb/
      Rpmd3gNkbbLOU5sk4tkbthSruTnr61lpL8TXq6abNBuvr/+pFF2U6PQJoMxxcDpv2mQOE5y3
      vp6VNvMEiGdT7j94yMqVLUrOjza+PV8dGiD8xq9KEyw5czJPAAAhYgZHe9zrTnDNhP1ByI0r
      Ne7f6VFducLacjXrECVvKRciATRVZRZOQdMxLYMl3cE0C2xsXk91RE8ieVMuhAkGiOMIRdVR
      X2GC4z/9Q5Am+LXMdU1qzvp6VtoLMQMAaNoJobgeSpziTHCODdqpEc/eAqU8E5yrvp6RNvME
      ONzbwa42ebrzmHffeQcin6NBiOsVsYwfhTf79a/DeJhhpJK3kcwTIEoSDne26Y9DPvno20Sa
      habqzAyb2dE2tas/zvWNRtZhSt5SMk8A2/GIZxFX1mv4/Q6KpuO4ZfqjEUl9FduQNliyOC6M
      CX4dQgjij/4PpFgIy7r68HlqZXXo02sznwHeFKVQAO305z+zHuBz1T6rDCcT4M21mSXAdNwn
      KZSxnkUwGXahUMZ54cLgmH5/gucVCX/j36OkNMHxHHHmUZtFm3nVZpYAs+mE/dYAXYm5f/sW
      jbUNvOJxYawb6zWEohLNZthuA8+TxXEliyGzBNBNG9cOmU6nrF/dpFQuEcWCjZUmteXjwlgH
      rSNsx8oqRMklID8m+ONvp9oNmnXhpfPUJiJ5thCWsk1FTVlSKF/j9Lw2PybYMCHt6ugc50Zz
      pX22HTpljfN89fWMtJkkwNTv0+rMsC2o199skSv8zW9IE7xg8tjXXJrgWRwz6LQZGxFP93Yx
      DYPEsNFFSBgp6MqMnfaI966tohVcmnV5JliyGDK5J1jXTa5cWUHRCui6TtErc+3aJppu4tgG
      ruexstRg0O/hleUl2ZLFcaFN8OenwoQQxN/7M2mCT2A+E5w8K46bRpuvcXpee6FN8PNHIhVN
      hzS5qsxhlPKmVdNXhstdX89Ie+4JcHSwR6s75OY77/6wMvTEn+DYL7kFJp5yNJhRKzuE//3X
      pAleMHnsa+5MsD/xEdGMu3dvo+o6wg/wwwn1Wg3LcRkMJ4yDACPsk1gepfIqtbK8IkmyGM49
      AbxqnStbFfYePyRAp9ZcJvQHzITg8LBNwVAZj302GnVUs0DRkVckSRbHhTPBgT8mEipu0f7h
      z4QQxN//vygpbojJ2mSdp3auM8E56+tZaS+cCbbsl298U3Q91QJn1mdOz1M7T2W4vPX1rLSZ
      JsDO9n1Uu8za8smrwdHv/heUyShVOyKVKr/aLNrMqzbTBPB9H9c0ebBzgBr0GPsB5cYSvaMe
      m+9ucee732VpY5P1lWaWYUreYjJNgPVrxzfITyIYHIU45Squ51FyHI4O2qysLuO48pokyeK4
      cCb4ZQghYNBD4fShxnGMluIoZR6189wTHMcxqqal8ll5G6fntRfOBL+K5O73ITr9HWEkCUna
      1dG8aedsEyXNV8z87WapXWgCHB4e0mw0iIX44TfMbOqjGgWCyQRFVZmMR7heGUNNQDPQNI1E
      CKIoRkQhhlXE0FWSR5/B1D91DAqk+6XmVEtKbR77ehbahSZAHMeEkwEHR32ms4AgVhge7OLV
      l1AVgYKOohfodwcIVaDHIYZXo9/tUqvWmEwnGFqJrc3lRYYpucQsNAEKukJr4BPFMyq1JqZh
      MHELaJZH0SmgJOBPJoxDga1FKKbDuN9mfeMq1ZLLn/zR73P1va8uMkTJJSc/JtgfXzqDdlrm
      NcGaqpJmL3Xexul5bX5M8O3vpqoMp8xhlHKnncPI5q6vZ6TNNAE+/d6fY7g1lutlonAChQqa
      IjA1iNFJojHDccLKcg12HsA0OHUb81QWzZs2b/FeBG2mCRDHMbaYsXfwlGAU4Hg+T3b3ubax
      hJpEhBg4lpdliJK3nEwT4Ob7H2IVTB4/esTKjTWSOMI0LZaWaiiJ4Kh1gFeRCSBZHPkxwcFE
      muATOC5upaQysuLZOk0a8jZOz2vzY4JvpTXBgiTlPVK50yYJScrq0CTimaFMsZU6b+P0nPbc
      E+Dx9j0GwymbN7cgUUlmPpFQsB2bydin6BQIwhgFQSIibLeMriqw8xBCaYIvWpt51557AsRx
      jB/O2HvyhDhRMNWIWZSgKjqPd3dYXruCZRqYGrQPdrFr13jvxvp5hym5JJx7AqysXWVlJWY8
      GTNLdCre8dHHaBqimSaN5hKmriLiGE1VcMvykmzJ4siRCfZTFXzK2mSdp1bE4ri4VVoTrGqp
      nivyNk7Pa3Njgmf3fpCqMlySJIiUq4V50yYkkOpE8HGbaYtq5W2cntemSoD+0x0ednusrWxS
      8wqEYUCi6EwDH03X0ZUERS8QBhNst8z+k/sohRIV18JyihzuPKTYuIqmCAxFEAlBgspR65BK
      rY5jasSKThRMsNwShqYS7z9GCaepOiuRvIpUCZCImPF4QuvokKALUzFFoNFtdamtLsOkR9+P
      KJU9itMEIQR6POXPP/qUUrlGqWSxe/sTNNPCMxV0DfY7E5o1j16vSzsMEEQoooA9iVhflfcE
      SxZDqgRwakt8dWmFcX9Ad+BTqzgIxcDUTerNJsHQoKIX8DwXUKDsYFsWSiKwvTL9Xp93bjQZ
      BxGNaolgPMAqNdGTELNYgnDMTDHxHFkRTrJY8mOCw0CuBJ+ke3bNUbqXBQJVUy/dGOfHBN/9
      PsRpLspOiFOW/c6bNkmSYwucaiE4QclRX89Km1kCJCLizu27lBtLlJ7dBJmoOiL0sYouo9EY
      QwPT9jA0hfjgCUgTLDljspsB4im6XaTXadM/gsmog24X6Ry18dwy6zc2+fSj77J243021+WZ
      YMliyCwBFMOhbGnEboOyW2Q6qeDHGrWyh+NVGI4m3Lh5HatUyipEySUgRyZ4KleCT9QdrwSn
      LoylapdujHNjgvuP75DEpy+PPu8KZ660z84En2ubOddmngCHhwfUKmX644BRr021uYpTMBhN
      fJIopFiqomsKQXufJE1lOInkNWSeAHEs6LVbfP/WNmvXVvAHHQ6CGEMVdA+fUqhe4X25HVqy
      ILJPgNAH02brxhZlr4Bq2JjFBFNX0TUVr1zLOkTJW0xuTPDx48/lKtp0WuYujJWjvp6VNvMZ
      4E3Zaz1CiNNfipm1yTpPbd7ivQjaUyfAg7u3Gc3gnc11YkVnOhlSdEtomsrBwQGOW2Y8HFAq
      eSQiwvEqBKM+JIIf3HvCh1eqtOIincf3+cpf/AqRUBl027hFneFEx7Y1Sp6LoiiMBj2cUg1D
      UxgM28Qp3gJJJK/j1I9An936AcNQgWkP061jFxT6rS71tSb9qUEhDjDsAkroM1NMtq6ucv/h
      DsnMx6ktUzUET9o9gnGEWyqQJAoWITOjwOioT7FcIkbBtgx6B3uYlQ3ev7HOrbvflgkgOXNO
      PQNsbN5ExDMCv04Yqxy19nn3Kx9yeNhivVbEDy2qJRcFQa/TIcag4hawS2sUCiZaErFhOqiq
      joh8/Eil5Ji02y0a79yk3+uzttokmCUYCrjSBEsWSG5McBxH0tydgBAxiqLOMU4ql+1FQ25M
      8Lda3yQUp98NmrXJOk9t3uI9T+3fWPsFdNV47icKuq5nkwDjYZsgtgn7+6helbJjM5uF+P4U
      yzTRDJUwAi2ZYRZLmJrK9vAegZhkEa7kLeDnkr/10p9nkgBKkhCGAdNwxpM7d1lfbuK5Nrc+
      uU21sY7r6qgq7G4/Zu36e1yT26ElCyKTBLC9GkedbZrrV2murjETCp5tcHVzi2qtTqFgoJBg
      6ToFuR1askByY4JDMb10RZtOi4hjFHUOE/wWF8YqqNYL4xJFUXYeIA1/9PSbzJLTm2CRJMcl
      w1OQN+3nX2XpdlIfb6VOE/FFHadN7x0+qP6l137GuSbA0cEBleUm/YOntIcRph5RrS1j2yYi
      jukPRpRch8l0hq4oRLMAt9LA0BQeje7hx9IES94c1zj58flcEyARAkgYDkZohkeSxPQOd2gb
      NpPhiNZRi+byOo5tohHTOzrE6E55/+bGeYYpuUScawIUixZPHu+zvLZBr9un0lhDTQStwwPW
      19cpui6NRhNDVxEiRtd03IqsCidZHNIEv0VaEQuUOc4Ev20mWFN0jBcWv35E7kzwHz79PbkS
      /Ca6tIWxctbXk7Rb3jt8WPuJEz8jswT45Lsf0dzYgmjGaDSgsbRCEAR4RYtxEGGoClEY4Faf
      meChNMGSN8czym/07zJLACEEcRiwu7eL61WZdA8ZThP2Do8oF23Uz01wT5pgyeLILAGq1Sqq
      btKoN6lVPcJYwUhGvLuxhqooxyXVdR2vLE2wZHHkxgTPRPhWGbRFaOWZ4B+hKdoXdn++SO5M
      8O88/A0CcfprUi+iQVuY9vOvsrfQBP/0yl9js3zzhZ9FSYSuzfcnnFECJHx2+xZOuUYSx1TK
      HjE68XREfzTGK1XRVYUo9HGrTUxN4V7/DpNonE24ksz5oPYXFvK5GSWAQDeLNGtldvcO+ezO
      LfSChVWsoSkJw+EANYnot1vovVCaYMnCyCgBNGoVh6N2lzCKuLZ5nalQIRxjl5exDA0hBIau
      40oTLFkguTHBoQjTVS6OYjQ9pcnKmTazleBz6KuuGMfxPcfnRjYNuTPBv/3g16UJfhPdW7gS
      /Hdu/CMKhpXq808iswR4+mSbSaSx0iwRC4UwStCTkATBQSdguVkmmvp4tSampnKvf5dJNMoq
      XEmGzMTp74Z7UzJLgDBOuLKxyvbD+8ffAAJmkY8/Dak1r9HvdRi0W7T6M2mCJQsjswRYW13m
      6f4hV69eI4mmdEYhRlJEd1yC0ZhyfQVTl9uhJYslNyZ4JmZyJfgEhBDHRwRTPI+LOEa9oH01
      VfOlPuFSmeD/9P2v40f+qXUX2dydvTYh1bfEXG2erP0HH36NuvPymfwsVnPnYe6Wnzy8C4aH
      qiZoqk616tF6ukOkOkz9CVc2N3m6fZtS8wqf3b3Hu9fXKZbrDLodbLsAusW0v4+Ph6kKSp7N
      yJ9h6iqzYIJXW8LUVe4cfcpoNjyLPkvOmWn0i1mH8ErmTgDd8vAHPbr9PrWlBru322ytl5hR
      RIgZnaMeTqnK4ZMHVKplDvZ2Gd3fZm3rPR7fuoVT9HBKDv3ODm6pxH67Q8Ur4osZ/c4RrUEk
      TbBkYcydANVqlUa1RD0U9Hp9Pnhvg4KhcnDYZW11FRIFFIFbLKHrOr2uxYZXYdDrcv3GDWLV
      JBz3uf7OTbqdLu+tr6FwfIDe0A28Sv0MuimRvJxcmWC5EnyCLqt7gk+IV1cNVEV96f87CyM7
      jzY3JvjXvvfvCKLTH4nMn5GdbyU4bXGrhZ3Nrd7k59/5hVSfex6cewJM+i0+ufeUlXoRr7FM
      FEZ4RQcQdLt9PNdh/MwEh9Mxpdoypq5yt/0po1Ca4LzxukMpF4FzT4CCU6JabDGeTOnvPsVU
      YNhLmAUBBx2fWrOGa1v4Ysag0+ZoEEsTLFkYmTwCaQWHteUlRDxj6EeUbB3TcjB3dmksL6Nr
      6rEJNgx5JliyUHJjgiMRpTJoURyjp1ylzJs2frYSnNoEa1oq//C6eBVFRVdf/T0rTfAb8vXv
      /Cq+NMEn6kBJXR06bbx//8N/wnoln4+pGSVAyMf/7wfYlRpVz0JJZgjdBcCzVKaxhmMZjId9
      zGIZp2Bwp/Upw3CQTbiS1/I33/27WYeQmsxmgAQFJZpw57Mn1Gs1FCPksNVmvVlF0Q26cUws
      pjixhtOsZhWm5C0nowTQqdVKlBrLFB0Ht1IHMcNzPZq1MnHo0x4EuKqF7bnZhCi5FOTGBMdJ
      xGW7w/a0ZFUYiwQMPd37fmmC35Bf+eNfZjyTJvgE4bPviPnuGL5aucbXfvKfvbE2iqJTt3dR
      OPcEiIIRH33/FqtLNezyMrNpQK3iQpLQOmpjqhp2rUrkB4T+iFJjhYKu8unBJwym0gSfB1G8
      uDO4F41zTwDVsFhtlBkMJxwN96jY8Gg0oKApHOzuYDge2nBCuaAw7HZoj4RcCZYsjHNPgOPz
      7wab1zdQSOj0RqyUi6iGiaJoVOt1VPV4AcU0DHkmWLJQcmSC43TmLmdbmufRnlVhLAXlS0Wo
      XkfWRnYebaYmOBERu7v7rK6vo6nHv7QwDDFN80v/9pf/6F8zDk9fHDd3RnYO7bxt/syNn+Fn
      b/5cKn1eyTQBRr0W7cGEYrFDfzxFFwFDP6Bgl3BMnSgc49bWKBULfLr/KYNpP8tw33reXXov
      6xDOnUwfgZIkYRpMGA4GDCYRK8v1401VSYJIEgadFqZXp+zaRHG6V20iEa88jfS2aeeZAUQi
      0FQtVbtCCFQ1ZV8z1ubCA3weYppfbtYDfJ7aeccp7SJa3sbpeW0uEkAiWRS5WQl+sn2f7jCk
      UXOZzmBz88or1zufbN9nPJnghzGO5eBPhji1ZfQkZHNz67h62ivYfXSX8SRmGIQUbZvpZEix
      sYoaTdm6vvXKNoPhEXcft6m4Jp3OCLdk4ocKVVtFGB5X15df2Wa/tcPtRweUXZdpGOFYKrPE
      wDUEqlNjY+Xlr4LHwx777QFKOMZPdJiOMcwC48DHtCu4BixtXMM2v/xGZ9jvctQf42iC1tAn
      CcZYVoFhEKIXKtSchKWNLUztiz1O2H/wA9TlrzB8/B0itc446GEXXPxgyvJSlTCM2Nq89pKI
      E5589gPs5Rvsbd+nUS2x3+lStBz8MKJZ9Qhj2Lp25UvKeDbl9r1t6q7JTquHV3SeXazoozkO
      ylTFazZYrn/5etRZMOburVvglAmDKa6loWoFBqM+6eaPDEgUnYpr0e92QDdeu9iv6Tobq0vU
      V9YYj4asLzcYDgYEs2flw1/Vhgh5enBEv31Ec22d4XDE+nKdfr/PLHn9YfOZ7+MHYw7aIxoV
      F6FZuLZBp32EUSi8vm+JgqFpzIRCzXNQTAe7oNE+OqLwGm3Rq+BYBprp4JgqbqlGMvVZWl0l
      nIzoDHxM/eW/Yq9cxTI1FE1n8+oGpUqDaDxiZWONYDSkOwoxvvTHD6DQbDSIgiGtzohOu8vq
      6hLjIKZRKtLvd0leeQ5YodFoEMchwWTC7t4Ry0t1gplC1bXp9dqo+pffAAJoRoFatQSKiqoq
      oJq4toHlljEQHB0dUSi8vIR6kkB55Qoly6RWcVENG+KEpfXV/DwChf6I7nhGxXOI4xjbdl55
      8OPxw88w3TpJ6NNcWWF//4Bmo358zNKy0F4zAySJYBrMaLdbrKyt8PRpi2ajhohjCraD+gpp
      kgh2d3ZoLjXp9MZUigbjmYLnFIjjGMdxXtmmiEIe7+6zulynO5ziFRSmiUHRMl6rHfba7LX6
      rDYrRIpJMh1hl+v0jg6pNRoYSkKIjm1+eaLvtw/Z747xCgqRZmOrMV59mfbBU+rNJoaaMMPE
      Mr6YQAm7j7dJDJe1pTJhpHB01GKlWaXVHVOreMe/H8d5yRdGwpPtB2h2GTUOKNebdNpdmjWP
      7nBKpVR8pTYKfR4+fEx9aYnhyGepWmQ8U9BiH6NYxlA14nj20rGa+iMePd5lZc60oHkAAADH
      SURBVG2d8SSgZGskmsmg181PAkgkiyA3j0ASySKQCSC51OTmLZBE8lLikN/+7W/yU3/1pxgF
      IXe/+xEf/uWfZBrB4ZNH/JWf/irf+r3fovHBT2HrKup0gGYo7G7vsdMOpQeQ5Jwk4Y+/9Seg
      CEQkiHWVulPg47tPuHFljZWSwX7P5/ajPTavXoNpi2kUsektcRQJmQCS/LO/8wjdchj6EZ4e
      4UcwjVWaVRfPKXD7zn1WVpdpdUcU1Bi3WkOEPgWrKBNAcrn5/4cMjl2W477/AAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='hungary' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='stat' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='top 5 prime death rates' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='yearly death trend ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2deZQcV33vP1XVXb1Pb7NrVm0z0kjyLgy2ZZlggw2ELQlgDIEHIQu8AOEF
      kvP+4WR5/7yTF0jOewlrAiHBgFkNPIwJW/ywiWXJi0brCEkzI81olt63Wu/7ozXDDDOyWurR
      qKW+n3PmuNyq+vat6vutqrv8flcRQggkkibFAyA9IGlWPAsbhUJhTQRLpRLBYLAuDcdx0DRN
      aqyhhuu6KIqCoihXVcNxHFRVrUtjQaeea7JwvAdAURQikUhdBVpKvVq2bePxeC6+o9SombWo
      eI2iIYTAcZy6rsnCNVUvW0EiuQ6QBpA0NdIAkqZGGkDS1EgDSJoaaQBJUyMNIGlqpAEkTY00
      gKSpkQaQNDXSAJKmRhpA0tRIA0iaGmkASVMjDSBpaqQBJE2NNICkqZEGkDQ10gCSdcUcHaVy
      4NmrXYxFagqqFMLh6LET9LTHOTE+RbI1QTpXIupXMfASC/mwXJXuzvYrXV7JNU75F09jjB3H
      v3MHite7bt8rhICFP8DNF7DKpdoMoCga0WiEbNFgqDfB6IxLRyiAq4BfCE4fP8rgrttxXRfH
      cbBtu67Cuq4rNa6ARr3pb9ZCw5icILhnD9nvP0b4/lfVVZZl18S2cSsVEALj+BhuPoenowPj
      4CiKquIbHsY6fhxUFX3rFozT43haWmp9Athk5uZJtrdxaq7A1q44M5kSUZ+Kic7wDbdgWWVU
      1VdNNdEAWRCkxnIaIaODk82iBEO03HcvM3/1P4jsvRvtIhlEhBDgOIiKgXAdzONj2Ok0nq4u
      SocOAeDfvh3j2DFUvx/fjhH0ZAJtcAAtkSA0MgIL5d21c1HXOzSEx+NBWevMcPl8XqZFaUCN
      RjBA6el9GJOTxF7/OsrPPINx+Aixh94GrguAfW4G+9w0wrIxjh7FSaUI7b0b85cnUXw+/DtG
      EJaFFo9DMAiFAsaRo9izs7T85mtRLiFP0MI1re+qSiQ1IlwX4/BhvNu3Uzl4EGduntLPnwQh
      ELaNPTOLefIk+sAA3u4uPF1doGnkvvktIvffT+DWWxCWhTF6iOKPfox55gyeRALf0BC4Lul/
      /jzxd70TRf1Vv87Cvf3FDCufAE2isV5PAOE4CMPALRSwJicxT53G09GBWyyS/853ib77XXjj
      CbRoFHtulvm//9942tsI3nknwd23ofr9y78zlyP/ne9RGR1F8en4t28ncOstqD09i9dECEHu
      ka8hHIfom38HADeTIfPVr4FjE3vwrWjR6DJd27bRVFUaoFk01toAwnURhoGTyWLPzmKOjaHF
      YiheD042h75pI56ODrRIBMXrxS2Xmfv4J0j86X9D07TFcjjpNGosdtFyuYaBquugKKtmhhNC
      kPn8F9CSSQDKBw4QfeMbQAiyX/s6obv3ENqzBxwH6+wUlSNHqDyzXxqgWTQuywBCYM/Po0Yi
      uMUS9vwcxuEjKIqCPTND+Zn9JN77e+iDA6ihEMqLlLHywkEqhw8TedMbr1hqROG6pD/7Obz9
      /YRffs9ieVzDIP/odygfeBY1EMDT3YVncJDQzTdLA1xrGm6pRHn/AXxDW9ESiZobfjW9vgiB
      ME3cXA7j8BHMkyepjB5C2DbCMAg/cD+iUsE4eLD67g3gukTf8hYU9cUrdPaRr6Fv3YI+MnLV
      coMK111sI8hG8DWIsG1Sn/ksWjJJef9+nEwGb08PsTf/DmootHL/8xXampigMnoILRolcMvN
      qOFwdUDItjHHxzFPnsLT0Y5x5Biq30fgtlvRWlsxHv8h7X/+Z6jRFqzxCUoHDuBJJGj56EdQ
      /f7qa8e/fJH8975H5NUPvGilNo6PEXngfq5mIv6lDeQFpAGuEYQQZL/6CPrGjYuVTTgO5aef
      Zv5Tn6b1/e9H8f7q53TSaVL/9HlEqYS3twdPfz+V0VHy338MNRzGLRRACBSPhnfDBspPP038
      nb9b7X2xbdKf/wLxdzyEFo8BoA/0o/X2LLt7K4pC7G0Pkvrkpyj+7D8I7blrVRMIy0LYFkog
      gDjf5dkoyFega0Sj8sQTmGO/JP5f3rniTpb/v9/Hnpsj9ra3gQLO7CxzH/879C1b0Foi+Ia2
      Ujk+hndDN4GREdxKBXv6HN7+PrRQCBQFc2KS9Oe/QPD2l2BNTKL39xG+Z++vBpG48GuUMC3m
      /+EfcHJ5tGgULR7DNzxM4JabUVQV4/hxSk8+Rfwdb2+49OjSAA2oIVwXt1TCzeZwcjnMiQmM
      Z58l+cEPVHtClu4rBG4+z9zH/w7/Dbuwp6cxjx0n/q53osWieDo7UTye2toAlkX2699AWBax
      tz24Yt+LaQjHwclmcVJpSj//OfbMLLEH30J5/4FqV+fu3deGAWzbolQsE4m2cKnFlAa4PA0h
      BE4qRfnpfZQPPAuqiieRQG2JoLRECN95Z/Xd3bZxDYPKs89hTZ3Ft3kL9uws3p4N5L/7PZx0
      huT7/gjvhu5l+ldjJNg8dZrMl76EdfYsnX/5F2ix2LVhgGee/Bn7DxznoT96N4FLFJYGuLCG
      eeoUxtFjhO99xfIRS9cl+8jXME/8kuAdLyVw001okUi1EVupUDlxAsUVWBMTCMPAt20bntZW
      tGRimY5bKiFMCy0WXVGOqzUVQrguxrFj+IaGUBSl4QywqkJnVxsjbo0z5SQXRQiBcegw2a9/
      HW93N5kvPUzsLW9G0bTFyo/j0PanH0aYJuapUxSOHK12c3q9EArh27yJwJLJXKuhBoNQ3/Js
      a46iqviHh692MS7IqnW8Uilx/OhJbrvjxvUuz7WNEIvdfEvvcOWn91H40Y9o/cAfo4bD5L71
      bdL/9M/EHnobuW8/SuWFg7S8+n5y3/gmno4OfCPb8W3ejHL+fd+2bbQ6n0SS1Vn1qhqWF10p
      YQPrF7JwbSJsm9y3vk1l9BAgWHCAGg6hhkIIQJQrtH7gj1G8Xpx0Gi0Wo/Lcc0x9+E8J3Hgj
      yT94L57uboK33341T6UpWdUAPtXCl+yUr0AXwS0WSX3mc+iDA7T/9z+HJfNk3GIRJ5PFGBvD
      29VJ7tuPoni9BG67Ff/2bYT23o01OYm3u/uSpvFK1pZV63gk3oYuztFYQxYNhBBYU1OkPvs5
      Wh54gMDNN53/WGBOTmIeO4anvaMapNHejt7Xt9gIXIre23s1Si9ZwqoGMI0imjeIvC+tRJgm
      +cd/SHn/fuJvfzuetlYKP/0p9rkZ/CMjONks/l270Fpb8e/cgW3bqPL9vWFZ9Zcpmw6F+Rmc
      C+3QhAjXpfL8C2Qefhh9YAD/tm2U9+3Dv2sX/pERtLvvrnv1c8n6s2r9LmbzRJPxFROX7FKG
      w6fn2NAeZTZTIhZQMYSXaDiAZTu0JhPrUOT1xclkqBwcpfTUU6BqRO69F/8Nu9CSSVnhrwNW
      HQgTwqVSsfAHfMtGgotz05yYyRAKhvFpAlcBRQjOjZ9k4w0vJRb0kMvlCIfDdRXKdV3UVWbu
      rYeGMAys8XHMg6PY2SzmoUN4+/oJv+F1eDdsWLdySI0rq7Nw/IongBCCg/v3UbQ0brn9lmXd
      oKo/gM48Pq9Krlgm6lcx8bJxeAdGIYMabm+YrBDm3Bz23DxuIY9bKOAWi7ilMqJURpgm3v5e
      9M2b8ba3Y52bwZ6ZoXLgAG6xBJqKk07j6e4m+b73oW8cvOy7faOMSDdCUPxaaSzcs6/ISHA5
      l+LMzDwBX2RFL1AgHGV4+8ph9kbDyeeZ//jfEdgxghoJo4bDeDo6UYMBFN2HPTVF4Sc/xTh0
      GCeVxjVNPIk4ajiCPjiAf9cu9I2D1TaQbMBe16z4dQMtEXJzKTxdoWsyb6IQguyXv0L4N19L
      ZPdt1djVcpnyc89TOXkS//ZtoCgk//D3L/4eX2cyKknjs8IAiqKzc9cg//nM2WtyHKDy3PO4
      hSJ6Xy/Zb34LYZoEbr4Zb88Ggi/ZLQedJMtY9fmeaO9jw4byNfMEEJaFdfYsbr5A5uGHCd56
      K8KyiLzqlSvSbEgkS1nVAGfHDzF+ItOwc4GEELiZDJXDh1E8Huy5edRQiMqBZ4m+8Q0Ed++W
      A1CSmlhRQ1zHJJ0uo7eHaJR7p1gI4D49TmV0FK0lgpPOYBw5AqqKsCwUVcPb10vgttuudnEl
      1xArDHDm4PNEBnfSfewYRaC+Hv3LR9g29vw8zswslUOH0BIJ/CPb0VoilJ7ehxoM0vKbr0Uf
      HEQJBuWglOSyWGGAjq3bcM7N0rZz5JKjwephIbbVOH4coWrYJ07g6eokcMut+HaMIEol0v/8
      BdRolMR73oMnEV/H0kmuV1YYQA+EGBhYmWNmrVlIe70QJujt7cWanMQ3NITW20PophsX97PG
      x0l//gtEHniA4C03L8tUIJHUw7q2EoXrIioG5X37sKam8e8YwS2XCe25Cy0SWQz5W1z4QAgq
      zz1H/rvfI/He9+Lt7FjP4kqagCtqACEEolzBLZcoPfH/cA2DwE03om/aSPDOO1bN1LUU68wZ
      co9+h7YPfQg1fOWfSpLmY80NIBwH68wZnHwe8/gYuC7+m24k/KpXovp8Nes4+Typz/0Tid97
      j6z8kivGmhvAmZvHnJrCv2Pk8rMB2DapT3+Wlte/Dm9X19oWUCJZwpobwNPRTmjzpro0Ct/5
      Lv5twwR27VqjUkkkq9OQQ6XBPXvwtrVe7WJImoCGnO6jJuJyYEuyLjSkASSS9UIaQNLUSANI
      mpq6GsG51CwGOuGAD8ex6w6Gl0jWmzoMIMgUSgi3yMTxs/QN30jQdXFdF9u2cRwH7Xz01dLt
      pdH8F9o2TbP6DUIghEBV1Uvetm17UfNydZb+rbYPVJPgvti24ziL57Lwueu6KIpS87ZlWQgh
      LuvYhW0hRDVG4nxA+ovtf6HfRwiBpmnLPr/Q73yhbcuy8Hq9l3Xsr+sssNo+F9NwHAfHcepb
      Iebk2BFMdCI+DVv107ehQ64P0KAajZLR4ZpYH6BWBjc3bt53iaQWZCNY0tRIA0iaGmkASVMj
      DSBpaqQBJE2NNICkqZEGkDQ10gCSpkYaQNLUSANImhppAElTIw0gaWqkASRNjTSApKmRBpA0
      NdIAkqZGGkDS1EgDSJoaaQBJU+OBapBxoVBYE8FSqVS3xtIofqmxNhpLMz9cTY21Cop3Xbeu
      a7JwTT1QTdVRbyaHpcisEI2n0SgZHRotK4R8BZI0NdIAkqZGGkDS1EgDSJoaaQBJUyMNIGlq
      ajKAEIJyuYxwbebm5rFti3yhhFkpU66Y2LazLFuvRHKtUGNHquD0+Dg9UT8TWUGpkKdQMfF7
      FRyh4hpFIm29dLZGcc+nSK+HhYEOqbH2GvUOhAFrMphWR1JyoP5rsnB87a9ArkNF9aPmp8ka
      K79YiPpHCSWNzfX429Y8lNbR3oEvEKR/ywgtYT+lio3Po+Cg4vVoy4bJFxZPuFyWLsAgNdZG
      Y2Fhj3pHYNdCo94b5YJGPddk4ZrWZABFUYknkwAEz38WDlVX+fCe//9656pIJFcSIQRusQi2
      jTF2Amt+Hl9PT2MulC25frHHJ3BmzhG47TaUpXdwIbCmptCiUdRQ6LL1hRC4hQLCsjAOjuJk
      s+iDA1QOH0ENhQjs3IknEUfr7UXzaNIAkvWl/NRTWGfOUPyPJ4j+9m/h7evDGp8g/53v4paK
      uOUygRtvJPwbL7+oEYQQCMvCOnUac3wcb0c7xvETKAE/gV270LdsRovFUPx+/Dt2LB5nz8ww
      /6lPo0Ui0gCS9cU8PU7rH78fe36e7FceQVTKqJEIkVe/Gn3jIFgWxSefZPZv/hb/zh1E7rsX
      NRSqVvZyGevsWUTFoDI+DoUCvqGtKD4fgZtuQou24N+584LfLYTAOHyY7FcfoeWhhwhs2igN
      IFk/hBA4pRKK34/e20vrhz6Ak0qjJRO/ahTrOuG77yZ4++0UHv8h5/7ir9AHBvD296H6fbjF
      6vH+oa34N2168e+zLJxsFmHbCMOgMnoIY3SU1g9+AHH+6SINILkshBDYZ6fwdndBjT06ztwc
      aiK+uL+iqnhaq50rwraxp6YxJydRPBrmqdN4ezbQ/tGPUH7+eYo/+xmKz48Wj+Ht6iLzpYeJ
      7NlD8K47V/QoCcui9NQvKPzkJ2jRGIpPR/H58LS20vrBD6B4vdi2XS1DPcukroZcJrUxNdY6
      mMU8dYqZv/xrOv76L/F2dtZ0fGnfPoyJSWKvfx04Dk42S+XZ53AyGXzDQ9X/btmC1ta2slKf
      7/pc2LbLZfIPfxlUldiDb0VRFOxUCuv0afKPPY5/ZDvh++5Fu8Di7QvXVBqgSTTW2gCZrz6C
      4vFgHj9O64f/BOUi3eDCdcl86WHURBxRKKIoCsGX3o6i62iJxEWPX6Z1PiJM0zSKP/kphR/+
      O2owgBaP4+3tJXTP3gtW/AXWZJ1gSXOy0Jhs++hHyH8PCo//kPAr71tuLiFwsjmMY8dQw2Eq
      Bw9S3vcMyY9+BL01iVKnoaE6Mh3aezfBl70URdcvy9xyNqjkkrHOnMHT2oai67S85tWUn9mP
      PTWFcF2MsTFy3/0e5RdeoPTUU2jJJL4tm4n+9m+hRaNoyQSs4aCpoiioPt9lP9nkE0ByyZSf
      3kfgtlsBEI6Lb3iI2f/5N8Tf/jZQVEJ77kINh1F27Vo8xk6l0WLRhptPJA0guSSEbVN54SBq
      OEz2y1/Bt3UrobvuQtg2brlC6I6XrXqcdfo03v7+mnuM1gtpAMlFcfIFrPHT2NkcxgsHUSMR
      QnvuWvbeHXn1A8z9r48TvP0lqzZozVOn0AcG1rnkF0caQLICIQT2zAzG4SNosSjW5CS+bdsJ
      DA3hzM/jaU2i+nzLjtHCYXzDQ5SfeYbg7t0rNM2Tpwjfs3edzqB2ao4IK5VKCOGSzmRwbZNs
      roBRLlIsG9i2jWmaV7qskiuIsB2MEyfIfee7VF44iDF6CP/2bfhvuIGW17wG36aNoChUnn+e
      wJJ3+6VEXnkf+R88jnB+LV5ECNx8DrWlZR3O5NKoOSJsYnKSeDhAuVRkcsaHV9joXgVXKFil
      ArHOPjqSHhkR1uAaSxuhwnEwDx/GOD6GvmULbqlI4K47qw3YJYNOC0NF9uwsSiCI8PtXLY8S
      ieAdGKD87LP4b7px8XMnl0MJhXCXnEe98QBrFRFWswFs06BU0bAsG9WjY9suuqbgouHxaDiO
      IyPCrgVsm9Iz+7EmJvAND6F6vYRffg9qNHrBQ4RhUhkdpfCDHxDee/eL/sYtD9zP/D9+Ev+N
      Nyw2eO3xCfS+vsX6UW8dWcs6VqMBFHp7+9D9ARzHJuDTqZgOugYOKh5NXRbp0wgRUFKjihAC
      e2qK7Ne+jj0zixoIoG/ZjG/TRszDRzBPnsTN5gjf9wpCe/cuf0JYFpmvfBXz5En8w8NEH3oI
      X8+G5fP4fw01kUDv7qay/wCBW29BURSs06fRBwdRVbXhIsLkVIjrUEO4Lk4qjXH0KPnvP4bi
      8RB5w+vRe3uwp89hjY/j5vP4hoaqU5C9XuY/8fdEXnXf4nRiYVnMf+rT+LZuJXzPXhSPp+bp
      FE46TfqL/4aby+Hbvg3j0CESv/9ePK2tDZccV/YCXasIgZPJUjk0SuCmm1B0HWtyEieTxTh6
      FMWnU376GcKvvJfQy16Ge/6O6YnH8W8bXiGX+IP3Mve3n0CNVWdbpj7z2Wrlf8VvXHJl1eJx
      Wv/r+3CLJSqHRnFLJbREYq3OfE1Z9QlQKpVIzafY0NvDpfpUPgEuT8M1DJz5FIrXA5oHxeup
      9rPrenXil6LgFgo4mSzmL09Q3v8sbrmEME2EaeHfNoxvxwiBXbuwUylS//hJEu9+N96eDUBt
      k+Gs6WlSn/wUWjyOb2gr4fuWz++5HtOjr6owdug5Rg+N8/p3vJnAZX+FpFaEEKQ//wWEYaBo
      nmoAh21VK/diwjEFNRxC0TTcfIHQXXdgz83j27oV4TrkvvUokfvvx8lkSP3jp4i/652Llb9W
      vJ2dxN76FqwzZ1a0B65XVjWAqhooXH5gsuTSKD+9D0XTSLz/favOgzenprGOHkVLJrAmJvFt
      G672qiy5A2otLcz/n39ACJfEO38Xva/vssri27oV39atdZ3PtcSqBmjv7KcjN41vtX+UrClO
      JkP++9+n7U8+9KvKLwTW2bNUDh5ESyaxc3kCw8N4OjouOAilDwyQfN8fIgzzku/8zcwKAwhh
      8qPHnyDW1oUF0gSXgHBdRKWCW6mA41R7Y0wTa24e89QprNPjCMeh5bWvQd+yGYQg/a//RvQN
      b0AJBjF/eZLKCy+gxeOo0RYCu3ejxWI1v+962trW4SyvL1ZcVUXRGRrq5j+fPsua9o9exxR+
      /BOKTzwBgOrzowT81QlhqoZQFLztbegDA4Tuugu3WCD//cdwH30Ub08PzswMxtGjWGfO4BsZ
      IXzvK1ACgaZ4/24EVr2tdA+OcKsaXcz6Jrkw5sQEpad+QduH/2TViru0F0gIAa5DeO9eCj/+
      CW65TPJ9f4QWj6N45dW+GqxqgNnxExRtPy4gEx5eGNc0yfzLvxJ/x0OoweCq+wjLojJ2AoSg
      8vzzeNrbCb5kN4n3vudFR1Ql68OqBhjYMoxnOi3jJV8EIQS5b36LwG234u3pWfa5k0pjHD6M
      Fo9RPnwE/6ZN+Ea24xsekq82DcYKAxjFHP/+45/S0dUvnwAvgnH0KPbZs0Tf9EaE62KOjWEc
      PVZ9r0+l0LduxdvdhWdoqO7BNMmVY8Uv49F1WpPtKJaFA7IdcB5h21iTkxjHjmEcPV4dLLrz
      ZWS//g30gQHUUIjwPfeghILL7/LnEzBJGpMVBlA9HlyzRF4LycoPWJOTFH/+JOV9z4CioCUT
      aC1RYr/zW+ibNi+OzkquTVbpBvUQbPHywhOHufOeO5a9AgnH4uz0LG3tSQpFg6CuYuPB59UQ
      rovuuz5GDYQQmGNjZL70ZZy5OQK33Upo7x78O3bg3bBBVvjriFVfTnu6+yjtjqx4AhRmzzBb
      UnDOTlExbTyagivAKORIbhik3evFdV0cx6mrUAuTnerBdRzsfB4nlcY+dw57dhZnfh4nk8FJ
      Z9AH+vFt2YJ34yBqSxRhGLj5HKUnn8IYPYTa0U7oDa/Hv2kjyhJjuwCXULa1OJc1uR6uuyy9
      4OVq1MtaaED912RxQt1q/5hKTXPk+XF233nrsieAFoqhTB4hF2lH2DaaruCg4ff7sCxrzQJi
      FpbiuVzcSoX0xz+B6vfjSSbxdHag9/Wh3XQjWiwGQOXgKPnHHkN9wodwq/3zwrRQ/D5iDz2I
      PjyM67p1r3xT77mstUajLG90tQNiFq7HCgOUsvOcOJ2muye+4qBAqIUtIzcS8HkxLaf6BEBB
      +7VIn7Xo6rtcDeG6ZL74rwRe9jJa7t5TdXo6g7BMyk/vwy2VqoslCJfkH/4BnrZ2FK16IRdm
      hi98d72rKtZ7LmupsRa/TaNoLNWq9/gVBghGk+zavpljp2ZWjAMoqkow4AfA56veGRvpbVi4
      LoXHf4g9MYnW2Ull9BCV0VG0eJzADTdUI5sCgQsOQMk++uZjhQHK+TRz2RLJRPySg2HWCyEE
      nO+WtCYm0ZJJjKNHMX95ErdcIvrgW1A7O/G2tOAf2X61iytpYFYYQA+EiYW9HBmbZcdNV6NI
      VYQQiEqlugbUxGQ1IWt7O9bEBG65jH/bMG6pjOLTcdJpUBScbJbWD34ATzKBbdtyqoHkoqww
      gObxYto26alzrE17fSXCcXBLJXBdnHSmmm/G78OZm6sumdPVhTi/tI2+ZTNqMEhw922ooRD+
      nTswjo9ReuIJrKlpvBu68XR2og/0E967Fy0eu0KlllyPrBIPYHH88ElaO1svazq0PTNL7ic/
      xdPWhlup4KRSeNrbEYaBnUrh7eqqhvoZBt7eHhSvjqetFS3Zijo0BJqGI8Sy6QNuqYRx/DiV
      557HPHUKb18foXv2og8MyD55SV2s0g3qYdOmPqayFvplCGrJRHVOu6ZVEyMpClxq99v56QNC
      CAo/+hGlnz+Jf9s2grffTuwtb0bRL6dkEslKVhkJVhCAXSpeVkSYommofv+aFM48eozK/gO0
      /9lH5Xx5yRVhRStRCIsTY6cRjntVI8LsVJrMw18m8XvvkZVfcsVY9RXojr13E25puWrxwMKy
      SX/6M8QefOviyK1EciVY9RUo2dp6NcqySOHRRwnecjO+rVuuajkk1z8NGakRevnL8SYbM5We
      5PqiIUeK1AZcTE1yfdKQBpBI1gtpAElTU1cbYH5mCkN4aQkFsG2LmOyxkVxj1GEAQcmwEcLk
      yIlDDO58yeL6YLZtV1N6n5+msHR76WonF9peWHBvYS2ohZVFLmXbtu1FzcvVWfq32j5wfuDw
      RbYXopaWfr4QZ1DrtmVZi/EWl3rswrYQAtu2F4NiXmz/C/0+Qgg0TVv2+YV+5wttW5aF9/y4
      zqUe++s6C6y2z8U0HMepLutVzwox4yePY6ATDeqYjkpPd4dcH6BBNRolt/81sT5ArfQNyn56
      ybWNbARLmhppAElTIw0gaWqkASRNjTSApKmRBpA0NdIAkqZGGkDS1EgDSJoaaQBJUyMNIGlq
      pAEkTY00gKSpkQaQNDWXNB3aqeQ4cmqGns4Ec5kS0YCKIbxEwwEs2yYuI8Ik1xg1B8RUijlm
      p8+RMgUtwSBeReAqoAjBuYlTbLzhdmJBD7lcjnA4XFehlkYcSQ2pcSV0Fo6v+QngC4RJtLsU
      To+DEiBdLBPzqxjo9G8ZopxLkwh3oGlaQ0RASY3lNEo011pFhAHrGxGmqCqhSIxtO+RrjuT6
      QTaCJU2NNICkqZEGkDQ10gCSpkYaQNLUeOD8WlyFwpoIlkqlujUapb/5etOod4X2RtFYmqGv
      nnIsjgMoilJ3Nrel1KvVSJXmetFYmpqxnnJclwZoNNZipFBqLGct1ltopHOp93wWyrH2BhCC
      Iy8cpHegg8Nj0/T0dHPs6FH6N7ThqAE29vesesyJg6Mk+to58ctpEgGNHH6iuttKaBoAAASI
      SURBVCBXsrhhx7aavnr2zCS2x8u5qTNEIlGy2Swb2mNM5VxGhjfjreHan5s4DX4/Z8+cJRwK
      Uy6bJGNhZlJphkZ2EaxBZPrUSdRIiDMTZwmHglQqNq3xAPNFwbYtG9FqKMfZE2Po8Sjj42eI
      RlrIzp/DF0limhVGRnaiey5eAfKZeeZzFYqZGbyBCFhFbKFRtGDH9m0E9IuvsZxLz5MuGORT
      0/jCYXLzWfzBAJZl0LtlJ8nwxZeszabmyJZMsnNTBFpayMxmSET9zFY83LhjGF8N51Ip5pmY
      nkexS5QdDcUq4ou0UErnSHT30tvVdlGN1Ow5SpYgNXOGgF8nU3SvQCNYUWhrTeINxYl4bU6O
      jWE5DkLxMDc3d8FjWluT6OE4Yc2m6HgQhXkKtodIqPYlV+PJVjxeL62xFvKFIrqmkCrYuOU0
      JcOpSSORaEXTfbRGQ2TSKSrlIpMzGTra4th2bXmE48lWPLqfZMRPOpWiUi4wn7cwCikMy62t
      HK1taL4AibAP09Vo6+ohFvLTmojiuLWVIxJL4veqtLe1kSuUiUST9Pf34qdMulCpSaMlnsTn
      UWhvayWXyaJ6dQzDoLurHcOs7ZpGE63o2nmNdAZV1zGFh4CbJ1O0Li4A+EMRIkEfbW1t5HM5
      2tpayeXSxJKdOKZRk0Ys0YpXU2hLJihaGvEAaB/72Mc+VtPRNWIYBtlsGstVUBSdkR3b6Ors
      IOTzogfCRMLBlQcJl3OzM9gOqJqPwf4ubLz0d8YRmo9QsDYTzM5MUTQcvKpK38Agtm3R09OF
      i5f2ZEtNj8252WlKhoNHVdm4dRiPCoOD/ZQqNq2xCLU8eedmpymZLpqisXloGFWB7q52FM1H
      Mh6pqRyzc9OUTQdV0ejv7yHgDxBtCVMyXOIt4ZrKkZ47R6ZYQfdqdPf0EQoECAT8lA2X7o5W
      1BpEUrPTZIsmukeju38zHix6BjdRLJTpbo/XdC7zM1Pkyha6R2XDwBY016RzQy+Wq9DdUZtG
      KZ9hZi6F7g/Q1tmFaxl0927GNYu0d29AU2v4bWemyBs2XlWhp78fo2LVlx59NdYiPbpEsl7I
      cQBJUyMNIGko1mo8qlYashtUcv3y7C+eIFWBHds2Ywmdcvos8bYNGI5D0Exx9PRZCnYQb8Ci
      NH6SvjvexNQLj1Go6LQkEgwnHJ46F6Tdb9Aej9Le0cXU3By97XHmChZGPkM8GiaVKxKOximm
      ZhCaTmt7J7pHxSjnyVdcNGHj2oZsA0jWF+FU+MGPn8QqzBHv7qVw9hTTkwVe8qbfxpk8Rt9N
      O3jki9+gP+rSunELYzMOeukUoY4bcMszbO/QeW5Wx5w7TLx3mOO/GGPzzn4yWLy0N8yJtCBX
      MQlgo7hlhGHhun5Opl2GBhOUDAO/oiCcNMK7QRpAsv5ks1mEVSZVchFmjpA/SryrEwrTHD3n
      0NbiQQUS0RCmGsQs5Shk5oi09RJQDFyPn3Q6TyE9Q0fnhvMv8jaZgkUll6azu7v6RcIBIQAV
      07aZT+fp6EguvvenZqelASSNxcJqmOvF/wenlB+PlGzmTwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='yearly death trend(story)' width='192'>
      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
      P1ATCZ+1oudVAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
